# CHANGELOG

## [1.0.0] - 2022-12-29

### Added
- File: graph.c
- File: graph.h

### Changed
- None

### Fixed
- None

### Removed
- None

## [1.0.1] - 2022-12-30

### Added
- Main: Get the total number of nodes in the graph and create an adjacency matrix from the total
- Function: `int** initMatrix(int n)`
- Function: `void deleteMatrix(int** matrix, int n)`
- Function: `void createconnet(int** matrix, int a, int b)`
- Function: `readbuild(int** matrix, char* filename)`
- Function: `printMatrix(int** matrix, int n)`
- Main function: The corresponding part has been added to the main function to test the operation of helper functions

### Changed
- Adjacency list redesigned
- Since using an adjacency list requires a lot of memory, I decided to use an adjacency matrix instead
- Since using a fixed size of array is not a good idea, I decided to use a dynamic array instead

### Fixed
- Optimized for the situation where the program receives a path to its own node (it will not report an error directly but it may be better to inform the user not to do so)

### Removed
- All functions written for the previous adjacency list

## [1.0.2] - 2023-1-3

### Added


### Changed
- Adding a non-dynamic array to a C language function will greatly affect the complexity of the program, and a single dynamic array will reduce the operating efficiency of the program. So it is best to use struct to represent the graph

### Fixed


### Removed
- None
